# Generate a valid card set for FREEHOLD simulation
# Mission: Generate 30-50 White faction cards using bodies.yaml

say "=== FREEHOLD Card Set Generation ==="

# Configuration
card_count = 35
faction_color = "#ffffff"

# Simplified body data (name:power:toughness)
bodies = [
  "Wraith:0:1",
  "Pixie:1:1", 
  "Pawn:1:2",
  "Squire:2:1",
  "Broker:1:3",
  "Knight:3:4",
  "Mage:0:5",
  "Bishop:0:5",
  "Rook:2:7",
  "Queen:4:5"
]

# White faction aspects
white_aspects = ["radiance", "order", "faith", "protection", "healing", "justice"]

say("Generating ${card_count} White faction cards...")

# Generate cards using proper Aura syntax
cards_generated = 0
i = 0

while i < card_count
  # Select random body and rank
  body_index = rand(bodies.length)
  body_name = if body_index == 0 then "Wraith" else if body_index == 1 then "Pixie" else if body_index == 2 then "Pawn" else if body_index == 3 then "Squire" else if body_index == 4 then "Broker" else if body_index == 5 then "Knight" else if body_index == 6 then "Mage" else if body_index == 7 then "Bishop" else if body_index == 8 then "Rook" else "Queen"
  
  base_power = if body_index == 0 then 0 else if body_index == 1 then 1 else if body_index == 2 then 1 else if body_index == 3 then 2 else if body_index == 4 then 1 else if body_index == 5 then 3 else if body_index == 6 then 0 else if body_index == 7 then 0 else if body_index == 8 then 2 else 4
  
  base_toughness = if body_index == 0 then 1 else if body_index == 1 then 1 else if body_index == 2 then 2 else if body_index == 3 then 1 else if body_index == 4 then 3 else if body_index == 5 then 4 else if body_index == 6 then 5 else if body_index == 7 then 5 else if body_index == 8 then 7 else 5
  
  rank = 1 + rand(4)  # Ranks 1-4 as specified
  
  # Calculate stats: rank multiplier + body base
  attack = (rank * 2) + base_power
  defense = rank + base_power
  hp = (rank * 3) + base_toughness
  
  # Generate card name using rank and body
  rank_prefix = if rank == 1 then "Novice" else if rank == 2 then "Veteran" else if rank == 3 then "Elite" else "Champion"
  card_name = "${rank_prefix} ${body_name}"
  
  # Create card data structure as YAML string
  card_yaml = "name: ${card_name}
faction: White
rank: ${rank}
color: ${faction_color}
body_type: ${body_name}
stats:
  attack: ${attack}
  defense: ${defense}
  hp: ${hp}
cost: ${rank + 2}
rarity: ${if rank >= 3 then "Rare" else "Common"}"

  # Write card to individual file
  filename = "cards/white/${card_name}.card.yaml"
  write_file(filename, card_yaml)
  
  # Output card info
  say("Generated: ${card_name} (R${rank}) - ATK:${attack} DEF:${defense} HP:${hp}")
  say("  └─ Card saved to ${filename}")
  
  cards_generated = cards_generated + 1
  i = i + 1
end

say("")
say("✓ Card generation complete!")
say("  └─ Generated ${cards_generated} cards")
say("  └─ Faction: White (${faction_color})") 
say("  └─ Rank range: 1-4")
say("  └─ Ready for simulation testing")

# Return summary for pipeline
say("Cardset: ${cards_generated} White cards ready")
